
									  -Design Document: Market-

-----------------------------------------INTERACTION DIAGRAM-----------------------------------------

Market
	Message							Parameters				[Sender] 	--> [Recipient]			EnumOrderStatus (Originally CARTED)
1.	msgOrderPlacement				Order 					Customer 		Cashier				PLACED
2.	msgInvoiceToCustomer			Order, Invoice 			Cashier			Customer			PAYING
3.	msgPayingForOrder				Invoice	 				Customer		Cashier				PAID
4.	msgHereIsReceiptInvoice			Invoice					Cashier			Customer			PAYMENT_RECEIVED
5.	msgFulfillOrder					Order					Cashier			Worker				ORDERING

6.	msgCustomerOrderReady			Order					Worker			Customer			VALIDATING
7.	msgInvoiceValidation			Invoice					Customer		Worker				VALIDATED
8.	msgHereIsCustomerOrder			Order					Worker			Customer			DONE



1.	msgOrderPlacement				Order					Cook			Cashier				PLACED
2.	msgInvoiceToCook				Order, Invoice			Cashier			Cook				PAYING
3.	msgPayingForOrder				Invoice	 				Cook			Cashier				PAID
4.	msgHereIsReceiptInvoice			Invoice					Cashier			Cook				PAYMENT_RECEIVED
5.	msgFulfillOrder					Order 					Cashier			Worker				ORDERING

6.	msgDeliverOrderToCook			Order					Worker			DeliveryTruck		DELIVERING
7.	msgCookOrderReady				Order					DeliveryTruck	Cook				VALIDATING
8.	msgInvoiceValidation			Invoice					Cook			DeliveryTruck		VALIDATED
9.	msgHereIsCookOrder				Order					DeliveryTruck	Cook				DONE


Item
	static enum EnumItemType = new enum {item possibilities}
	map from item type to price

Order
	static enum EnumOrderStatus {CARTED, PLACED, PAYING, PAID, PAYMENT_RECEIVED, ORDERING, DELIVERING, VALIDATING, VALIDATED, DONE};
	EnumOrderStatus mOrderStatus;
	Map<Item, Integer> mItems;
	Person mPerson;
	
Invoice
	Order mOrder;
	final int mTotal;
	int mPayment;
	boolean mPaid; //signed by the cashier


*Customer = MarketCustomerAgent
*Worker = MarketWorkerAgent
*Cashier = MarketCashierAgent
*Cook = MarketCookAgent
*DeliveryTruck = MarketDeliveryTruckAgent


