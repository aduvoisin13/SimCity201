-----------------------------------------------WORKER-----------------------------------------------

DATA
List<Order> mOrders;

MESSAGES
msgFulfillOrder(Order o) {
	mOrders.add(o);
	o.mEvent = ORDER_PAID;
}

msgOrderFulfilled(Order o) {				//from animation
	if(o.mPersonRole = instanceOf(MarketCustomerRole))
		then o.mEvent = TOLD_TO_FULFILL;
	else
		then o.mEvent = TOLD_TO_SEND;
}

SCHEDULER
if ∃ order in mOrders ∈ order.mStatus = PAID & order.mEvent = ORDER_PAID
	then o.mStatus = ORDERING;
	processOrder(order);
if ∃ order in mOrders ∈ order.mStatus = ORDERING & order.mEvent = TOLD_TO_FULFILL
	then o.mStatus = FULFILLING;
	fulfillOrder(order);
if ∃ order in mOrders ∈ order.mStatus = ORDERING & order.mEvent = TOLD_TO_SEND
	then o.mStatus = DELIVERING;
	sendOrder(order);

ACTIONS
processOrder(Order o) {
	DoFulfillOrder(o);						//animation call
}

fulfillOrder(Order o) {
	DoGoToFront();							//animation call
	o.mPersonRole.msgHereIsCustomerOrder(o);
	mOrders.remove(o);
}

sendOrder(Order o) {
	DoGoToDeliveryTruck(o.mDeliveryTruck);	//animation call

	o.mDeliveryTruck.msgDeliverOrderToCook(o);
	mOrders.remove(o);
}